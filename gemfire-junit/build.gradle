dependencies {
  compile project(subprojectBase + 'gemfire-core')

  provided group: 'org.apache.hbase', name: 'hbase-protocol', version: hbaseVersion
  provided (group: 'org.apache.hbase', name: 'hbase-common', version: hbaseVersion) {
    exclude(group: 'org.apache.hbase', module: 'hbase-annotations')
  }
  provided (group: 'org.apache.hbase', name: 'hbase-client', version: hbaseVersion) {
    exclude(group: 'org.apache.hbase', module: 'hbase-annotations')
    exclude(group: 'io.netty', module: 'netty')
  }
  provided (group: 'org.apache.hbase', name: 'hbase-server', version: hbaseVersion) {
    exclude(group: 'org.apache.hbase', module: 'hbase-annotations')
    exclude(group: 'org.apache.hadoop', module: 'hadoop-core')
    exclude(group: 'org.apache.hadoop', module: 'hadoop-client')
    exclude(group: 'org.apache.hadoop', module: 'hadoop-mapreduce-client-jobclient')
    exclude(group: 'org.apache.hadoop', module: 'hadoop-mapreduce-client-core')
    exclude(group: 'org.apache.hadoop', module: 'hadoop-auth')
    exclude(group: 'org.apache.hadoop', module: 'hadoop-annotations')
    exclude(group: 'org.apache.hadoop', module: 'hadoop-hdfs')
    exclude(group: 'org.apache.hbase', module: 'hbase-hadoop1-compat')
    exclude(group: 'commons-math', module: 'commons-math')
    exclude(group: 'org.slf4j', module: 'slf4j-api')
    exclude(group: 'com.sun.jersey', module: 'jersey-server')
    exclude(group: 'com.sun.jersey', module: 'jersey-servlet')
    exclude(group: 'com.sun.jersey', module: 'jersey-core')
    exclude(group: 'com.sun.jersey', module: 'jersey-json')
    exclude(group: 'commons-io', module: 'commons-io')
  }

  compile 'net.spy:spymemcached:2.12.0'
  compile 'org.apache.bcel:bcel:5.2'
  compile "junit:junit:${junitVersion}"
  compile 'org.hamcrest:hamcrest-core:1.3'
  compile 'org.hamcrest:hamcrest-library:1.3'
  compile 'org.jmock:jmock:2.5.1'
  compile 'org.jmock:jmock-legacy:2.5.1'
  compile 'edu.umd.cs.mtc:multithreadedtc:1.01'
  compile 'cglib:cglib-nodep:2.1_3'
  compile 'org.objenesis:objenesis:1.0'
  compile 'antlr:antlr:2.7.7'

  provided 'net.sourceforge.jline:jline:1.0.S2-B'
  provided "org.eclipse.jetty:jetty-http:${jettyVersion}"
  provided "org.eclipse.jetty:jetty-io:${jettyVersion}"
  provided "org.eclipse.jetty:jetty-security:${jettyVersion}"
  provided "org.eclipse.jetty:jetty-server:${jettyVersion}"
  provided "org.eclipse.jetty:jetty-servlet:${jettyVersion}"
  provided "org.eclipse.jetty:jetty-util:${jettyVersion}"
  provided "org.eclipse.jetty:jetty-webapp:${jettyVersion}"
  provided "org.eclipse.jetty:jetty-xml:${jettyVersion}"

  provided "org.springframework:spring-aop:${springVersion}"
  provided "org.springframework:spring-beans:${springVersion}"
  provided "org.springframework:spring-context:${springVersion}"
  provided "org.springframework:spring-context-support:${springVersion}"
  provided "org.springframework:spring-core:${springVersion}"
  provided "org.springframework:spring-expression:${springVersion}"
  provided "org.springframework:spring-web:${springVersion}"
  provided "org.springframework:spring-webmvc:${springVersion}"
  provided "org.springframework:spring-tx:${springVersion}"
  provided 'org.springframework.shell:spring-shell:1.0.0.RELEASE'

  provided "org.apache.hadoop:hadoop-annotations:${hadoopVersion}"
  provided "org.apache.hadoop:hadoop-auth:${hadoopVersion}"
  provided "org.apache.hadoop:hadoop-common:${hadoopVersion}"
  provided "org.apache.hadoop:hadoop-hdfs:${hadoopVersion}"
  provided "org.apache.hadoop:hadoop-mapreduce-client-core:${hadoopVersion}"
  provided "com.google.protobuf:protobuf-java:${protobufVersion}"
  provided "com.sun.jersey:jersey-core:${jerseyVersion}"
  provided "com.sun.jersey:jersey-server:${jerseyVersion}"
  provided "com.sun.jersey:jersey-servlet:${jerseyVersion}"
  provided 'javax.ws.rs:jsr311-api:1.1.1'
  provided "org.mortbay.jetty:jetty:${hadoopJettyVersion}"
  provided "org.mortbay.jetty:jetty-util:${hadoopJettyVersion}"
  provided "com.google.code.findbugs:jsr305:${jsr305Version}"

  provided "org.apache.hadoop:hadoop-common:${hadoopVersion}:tests"
  provided "org.apache.hadoop:hadoop-hdfs:${hadoopVersion}:tests"

  // use dunit support from snappydata
  if (subprojectBase == ':') {
    compile 'io.snappydata:dunit:1.0.4-1'
  } else {
    compile project(':dunit')
  }
}
